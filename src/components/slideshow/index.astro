---
import Slide from "./slide.astro"
//@ts-ignore
import { sanityClient } from "sanity:client"
import imageUrlBuilder from "@sanity/image-url"
import type { SanityImageSource } from "@sanity/image-url/lib/types/types"

const { projectId, dataset } = sanityClient.config()

const urlFor = (source: SanityImageSource) =>
  projectId && dataset
    ? imageUrlBuilder({ projectId, dataset }).image(source)
    : null

const { slides } = Astro.props
console.log(slides)

interface SlideType {
  title: string
  description: string
  desktopImage: {
    asset: {
      _ref: string
    }
  }
  href?: string
  relatedPost?: {
    slug: {
      current: string
    }
  }
}
---

<div class="slider-container relative h-[calc(100vh-120px)]">
  <div id="slides" class="relative w-full h-full">
    {
      slides.map((slide: SlideType, index: number) => {
        const link =
          slide.href ||
          (slide.relatedPost?.slug?.current
            ? `projekt/${slide.relatedPost.slug.current}`
            : "#")

        return (
          <Slide
            title={slide.title}
            desc={slide.description}
            img={urlFor(slide.desktopImage.asset._ref)?.url()}
            link={link}
            dataSlide={index}
          />
        )
      })
    }
  </div>
  <button id="prev" class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 hover:bg-opacity-100 p-4 rounded-full z-10 transition-all duration-300">←</button>
  <button id="next" class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 hover:bg-opacity-100 p-4 rounded-full z-10 transition-all duration-300">→</button>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const slides = document.querySelectorAll("[data-slide]");
    const prevButton = document.getElementById("prev");
    const nextButton = document.getElementById("next");
    let currentSlide = 0;

    function showSlide(n: number) {
      slides.forEach((slide) => {
        (slide as HTMLElement).style.opacity = "0";
      });
      (slides[n] as HTMLElement).style.opacity = "1";
    }

    function nextSlide() {
      currentSlide = (currentSlide + 1) % slides.length;
      showSlide(currentSlide);
    }

    function prevSlide() {
      currentSlide = (currentSlide - 1 + slides.length) % slides.length;
      showSlide(currentSlide);
    }

    showSlide(0);
    prevButton?.addEventListener("click", prevSlide);
    nextButton?.addEventListener("click", nextSlide);

    setInterval(nextSlide, 5000);
  });
</script>

<style>
  .slider-container {
    position: relative;
    width: 100%;
    overflow: hidden;
  }
</style>
