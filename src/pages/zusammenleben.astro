---
export const prerender = false
//@ts-ignore
import { sanityClient } from "sanity:client"
import MainLayout from "../layouts/MainLayout.astro"
import imageUrlBuilder from "@sanity/image-url"
import type { SanityImageSource } from "@sanity/image-url/lib/types/types"
import H1 from "../components/typography/h1.astro"
// Sayfa ve gönderi sayısı ayarları
// @ts-ignore

const pageParam = Astro.url.searchParams.get("page")

console.log("Sanity pageParam: " + pageParam)
const currentPage = pageParam ? Math.max(1, parseInt(pageParam, 10)) : 1
console.log("Sanity page: " + currentPage)
const postsPerPage = 12
const pageIndex = currentPage - 1

// Sanity yapılandırması
const { projectId, dataset } = sanityClient.config()

const urlFor = (source: SanityImageSource) =>
  projectId && dataset
    ? imageUrlBuilder({ projectId, dataset }).image(source)
    : null

// GROQ sorgu filtresi
const COLLECTION_FRAGMENT = /* groq */ `
  *[_type == "post" && references(*[_type=="postcategory" && slug.current=="zusammenleben"]._id)]
`

// GROQ sorgusu
const query = /* groq */ `{
  "items": ${COLLECTION_FRAGMENT}
    | order(publishedAt desc)
    [($pageIndex * ${postsPerPage})...($pageIndex + 1) * ${postsPerPage}] {
      _id,
      title,
      slug,
      image,
      publishedAt,
    },
  "pagination": {
    "totalPageCount": count(${COLLECTION_FRAGMENT}) / ${postsPerPage},
    "currentPage": $pageIndex + 1,
  }
}`

// Verileri fetch etme
const { items: posts, pagination } = await sanityClient.fetch(query, {
  pageIndex,
})

//console.log(posts)
---

<MainLayout title="Blog Posts">
  <div class="container mx-auto min-h-[calc(100vh-120px)] w-10/12 py-8">
    <H1>Projekt</H1>

    {
      posts.length === 0 ? (
        <div class="text-center py-10">
          <p class="text-gray-600">Loading posts...</p>
        </div>
      ) : (
        <ul class="grid grid-cols-1 md:grid-cols-3 gap-8">
          {posts.map((post: any) => (
            <li class="hover:shadow-lg transition-shadow duration-200 rounded-lg overflow-hidden">
              <a href={`/projekt/${post.slug.current}`} class="block">
                {post.image && (
                  <div class="aspect-video overflow-hidden">
                    <img
                      src={urlFor(post.image.asset._ref)
                        ?.width(550)
                        .height(310)
                        .url()}
                      alt={post.title}
                      class="w-full h-full object-cover transition-transform duration-200 hover:scale-105"
                    />
                  </div>
                )}
                <div class="p-4">
                  <h2 class="text-xl font-semibold mb-2">{post.title}</h2>
                  <p class="text-gray-600 text-sm">
                    {new Date(post.publishedAt).toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                  </p>
                </div>
              </a>
            </li>
          ))}
        </ul>
      )
    }

    {/* Sayfalama Kontrolleri */}
    <Fragment client:load>
      <div class="flex justify-center gap-4 mt-12">
        <nav class="flex items-center gap-2" aria-label="Pagination">
          {/* Önceki Sayfa */}
          {
            pagination.currentPage > 1 && (
              <a
                href={`/projekt?page=${pagination.currentPage - 1}`}
                class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors duration-200"
                aria-label="Previous page"
              >
                Previous
              </a>
            )
          }

          {/* Sayfa Numaraları */}
          <div class="flex gap-2">
            {
              Array.from(
                { length: Math.ceil(pagination.totalPageCount) },
                (_, i) => i + 1
              ).map((pageNum) => (
                <a
                  href={`/projekt?page=${pageNum}`}
                  class={`px-4 py-2 rounded-md transition-colors duration-200 ${
                    pagination.currentPage === pageNum
                      ? "bg-blue-500 text-white"
                      : "bg-gray-100 text-gray-700 hover:bg-gray-200"
                  }`}
                  aria-current={
                    pagination.currentPage === pageNum ? "page" : undefined
                  }
                >
                  {pageNum}
                </a>
              ))
            }
          </div>

          {/* Sonraki Sayfa */}
          {
            pagination.currentPage < Math.ceil(pagination.totalPageCount) && (
              <a
                href={`/projekt?page=${pagination.currentPage + 1}`}
                class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors duration-200"
                aria-label="Next page"
              >
                Next
              </a>
            )
          }
        </nav>
      </div>
    </Fragment>

    {/* Sayfa Bilgisi */}
    <div class="text-center mt-4 text-sm text-gray-600">
      Page {pagination.currentPage} of{" "}
      {Math.ceil(pagination.totalPageCount)}
    </div>
  </div>
</MainLayout>
